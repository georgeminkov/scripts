workflow StartStopVMs
{
    Param(
        [Parameter(Mandatory=$false)]
        [String]
        $TagName,
        [Parameter(Mandatory=$false)]
        [String]
        $TagValue,
        [Parameter(Mandatory=$true)]
        [String]
        $RgName,
        #STOP or START VMs
        [Parameter(Mandatory=$true)]
        [String]
        $Action
        )
     
    $connectionName = "AzureRunAsConnection";
 
    try
    {
        # Get the connection "AzureRunAsConnection "
        $servicePrincipalConnection=Get-AutomationConnection -Name $connectionName        
 
        "Logging in to Azure..."
        Add-AzureRmAccount `
            -ServicePrincipal `
            -TenantId $servicePrincipalConnection.TenantId `
            -ApplicationId $servicePrincipalConnection.ApplicationId `
            -CertificateThumbprint $servicePrincipalConnection.CertificateThumbprint 
    }
    catch {
 
        if (!$servicePrincipalConnection)
        {
            $ErrorMessage = "Connection $connectionName not found."
            throw $ErrorMessage
        } else{
            Write-Error -Message $_.Exception
            throw $_.Exception
        }
    }
         
    if($TagName -eq $null) {
        $vms = Find-AzureRmResource  | where {(($_.ResourceType -like "Microsoft.Compute/virtualMachines")) -and ($_.ResourceGroupName -eq $RgName)} #|foreach {get-azurermvm -ResourceGroupName $RgName -Name $_.Name -Status}
    } else {
        $vms = Find-AzureRmResource -TagName $TagName -TagValue $TagValue | where {(($_.ResourceType -like "Microsoft.Compute/virtualMachines")) -and ($_.ResourceGroupName -eq $RgName)}
    } 
    Write-Output $vms
    Foreach -Parallel ($vm in $vms){
        
        if($Action.ToLower() -eq "stop"){
            Write-Output "Stopping $($vm.Name)";        
            Stop-AzureRmVm -Name $vm.Name -ResourceGroupName $RgName -Force;
        }
        elseif ($Action.ToLower() -eq "start"){
            Write-Output "Starting $vm";        
            Start-AzureRmVm -Name $vm.Name -ResourceGroupName $RgName;
        } else {
            Write-Output "Action not selected correct. Options -> Stop/Stop"
        }
    }
}
